.container {
  display: flex; /* Make .container a flex container */
  flex-direction: column; /* Stack .main vertically */
  height: 100vh; /* Explicitly set to viewport height */
  overflow: hidden; /* Prevent the main container itself from scrolling */
  background-color: #f0f2f5;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
}

.main {
  display: flex;
  flex-direction: column;
  flex: 1; /* Allow .main to take all available space from .container */
  width: 100%;
  overflow: hidden; /* Prevent .main from scrolling */
}

.header {
  background-color: #ffffff; 
  padding: 1rem 2rem;
  border-bottom: 1px solid #e8e8e8;
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  width: 100%;
  /* Header is fixed height, does not flex-grow */
  flex-shrink: 0; /* Prevent header from shrinking */
}

.title {
  margin: 0;
  line-height: 1.25;
  font-size: 1.8rem; 
  color: #1f1f1f; 
  text-align: left; 
}

/* NEW WRAPPER for the main scrollable area below the header */
.contentLayoutWrapper {
  flex: 1; /* Takes all space in .main after .header */
  display: flex; /* Important for its child .contentLayout */
  overflow: hidden; /* This wrapper itself should not scroll */
  /* background-color: lightcoral; /* For debugging */
}

.contentLayout {
  display: flex;
  flex-direction: row;
  padding: 1.5rem; 
  gap: 1.5rem; 
  width: 100%; /* Take full width of the wrapper */
  height: 100%; /* Take full height of the wrapper */
  overflow: hidden; /* Children (.sidebar, .mainContent) will manage their own scroll */
  /* background-color: lightblue; /* For debugging */
}

.sidebar {
  flex: 0 0 320px; 
  background-color: #ffffff;
  border-radius: 8px;
  padding: 1rem;
  box-shadow: 0 1px 3px rgba(0,0,0,0.04);
  height: 100%; /* Full height of .contentLayout */
  overflow-y: auto; /* Sidebar itself scrolls if its content is too long */
  /* background-color: lightgreen; /* For debugging */
}

.mainContent {
  flex: 1; /* Takes remaining horizontal space */
  display: flex;
  flex-direction: column;
  background-color: #ffffff;
  border-radius: 8px;
  box-shadow: 0 1px 3px rgba(0,0,0,0.04);
  height: 100%; /* Full height of .contentLayout */
  overflow: hidden; /* Children (.viewToggleContainer, .viewerPanel) will manage their space/scroll */
  /* background-color: lightgoldenrodyellow; /* For debugging */
}

.viewToggleContainer {
  padding: 0.75rem 1rem;
  background-color: #f9f9f9; 
  border-bottom: 1px solid #e8e8e8;
  display: flex;
  gap: 0.5rem;
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
  flex-shrink: 0; /* Fixed height */
}

.toggleButton {
  padding: 0.5rem 1rem;
  border: 1px solid #d0d0d0;
  background-color: #fff;
  cursor: pointer;
  border-radius: 5px;
  font-size: 0.9rem;
  color: #333;
  transition: background-color 0.2s ease, border-color 0.2s ease;
}

.toggleButton:hover:not(:disabled) {
  background-color: #f0f0f0;
  border-color: #bbb;
}

.toggleButton.activeButton {
  background-color: #007bff;
  color: white;
  border-color: #007bff;
  font-weight: 600;
}

.toggleButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.viewerPanel {
  flex: 1; /* Takes remaining space in .mainContent after .viewToggleContainer */
  display: flex; 
  flex-direction: column; /* CRUCIAL: Ensure children stack vertically and can expand with flex:1 */
  overflow: hidden; /* The child (BpmnViewer or TextualProcessView) will manage its height/scroll */
  border-bottom-left-radius: 8px; /* Match container rounding */
  border-bottom-right-radius: 8px;
  /* background-color: pink; /* For debugging */
}

.placeholder, .loadingMessageContainer {
  flex: 1; /* Ensure these fill the .viewerPanel if active */
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem;
  height: 100%;
}

.placeholder p, .loadingMessage {
  text-align: center;
  color: #555;
  font-size: 1rem;
}

.errorPanel {
  background-color: #ffebee;
  color: #c62828;
  padding: 0.75rem 1rem;
  border-bottom: 1px solid #e8e8e8;
  text-align: center;
  font-size: 0.9rem;
  flex-shrink: 0; /* Fixed height */
}

/* Responsive styles */
@media (max-width: 900px) { 
  .contentLayoutWrapper {
    /* On small screens, the wrapper might need to scroll if contentLayout (column) is too tall */
    /* overflow-y: auto; */ /* This might be too much, let contentLayout itself scroll first */
  }
  .contentLayout {
    flex-direction: column;
    overflow-y: auto; /* Allow the combined sidebar + mainContent to scroll if taller than viewport */
    height: auto; /* Allow it to grow based on content */
  }
  .sidebar {
    flex: 0 0 auto; 
    width: 100%;
    height: auto; /* Auto height for column layout */
    max-height: 30vh; /* Limit sidebar height on small screens */
  }
  .mainContent {
    flex: 1; /* Take remaining space in column layout */
    width: 100%;
    height: auto; /* Auto height for column layout */
    min-height: 50vh; /* Ensure it has some decent minimum height */
  }
} 